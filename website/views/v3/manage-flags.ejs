<!doctype html>
<html lang="en">
<head>
  <%- include('partials/head') %>
  <title>Manage Flags - OTP Bot</title>
</head>
<body class="bg-gray-50 min-h-screen">
  <!-- Include Navbar -->
  <%- include('partials/navbar', { page: 'manage-flags' }) %>

  <!-- Main Content -->
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Manage Flags</h1>
      <p class="text-gray-600">Add, edit, or remove country flags for your servers</p>
    </div>

    <!-- Add New Flag Card -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Add New Flag</h3>
      <form id="addFlagForm" class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
          <label for="country" class="block text-sm font-medium text-gray-700 mb-2">
            Country Name <span class="text-red-500">*</span>
          </label>
          <input 
            type="text" 
            id="country" 
            name="country" 
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            placeholder="e.g., India"
          >
        </div>
        <div>
          <label for="flag" class="block text-sm font-medium text-gray-700 mb-2">
            Flag Emoji <span class="text-red-500">*</span>
          </label>
          <input 
            type="text" 
            id="flag" 
            name="flag" 
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            placeholder="ðŸ‡®ðŸ‡³"
          >
        </div>
        <div class="flex items-end">
          <button 
            type="submit"
            class="w-full bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
          >
            Add Flag
          </button>
        </div>
      </form>
    </div>

    <!-- Flags List -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900">Existing Flags</h3>
      </div>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Country
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Flag
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Actions
              </th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200" id="flagsTableBody">
            <% flags.forEach(function(flag) { %>
              <tr data-flag-id="<%= flag._id %>">
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900"><%= flag.country %></div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-2xl"><%= flag.flag %></div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                  <button 
                    onclick="editFlag('<%= flag._id %>', '<%= flag.country %>', '<%= flag.flag %>')"
                    class="text-blue-600 hover:text-blue-900 mr-4"
                  >
                    Edit
                  </button>
                  <button 
                    onclick="deleteFlag('<%= flag._id %>')"
                    class="text-red-600 hover:text-red-900"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Edit Flag Modal -->
  <div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Edit Flag</h3>
        <form id="editFlagForm" class="space-y-4">
          <input type="hidden" id="editFlagId">
          <div>
            <label for="editCountry" class="block text-sm font-medium text-gray-700 mb-2">
              Country Name <span class="text-red-500">*</span>
            </label>
            <input 
              type="text" 
              id="editCountry" 
              name="country" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            >
          </div>
          <div>
            <label for="editFlag" class="block text-sm font-medium text-gray-700 mb-2">
              Flag Emoji <span class="text-red-500">*</span>
            </label>
            <input 
              type="text" 
              id="editFlag" 
              name="flag" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            >
          </div>
          <div class="flex justify-end space-x-3">
            <button 
              type="button"
              onclick="closeEditModal()"
              class="px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors"
            >
              Cancel
            </button>
            <button 
              type="submit"
              class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Update
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    // Add Flag Form
    document.getElementById('addFlagForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const data = {
        country: formData.get('country'),
        flag: formData.get('flag')
      };

          // Get backend URL - use environment variable or fallback to current origin
            function getBackendUrl() {
          // Always use the same origin to avoid CORS issues
          return window.location.origin;
        }

    try {
      const backendUrl = getBackendUrl();
      console.log(`ðŸ”— [DEBUG] Using backend URL: ${backendUrl}`);
      
      const response = await fetch(`${backendUrl}/add-flag`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();
        
        if (result.status === 1) {
          showNotification('Flag added successfully!', 'success');
          this.reset();
          location.reload(); // Refresh to show new flag
        } else {
          showNotification(result.message || 'Error adding flag', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error adding flag', 'error');
      }
    });

    // Edit Flag
    function editFlag(id, country, flag) {
      document.getElementById('editFlagId').value = id;
      document.getElementById('editCountry').value = country;
      document.getElementById('editFlag').value = flag;
      document.getElementById('editModal').classList.remove('hidden');
    }

    function closeEditModal() {
      document.getElementById('editModal').classList.add('hidden');
    }

    // Edit Flag Form
    document.getElementById('editFlagForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const flagId = document.getElementById('editFlagId').value;
      const formData = new FormData(this);
      const data = {
        country: formData.get('country'),
        flag: formData.get('flag')
      };

      try {
        const backendUrl = getBackendUrl();
      console.log(`ðŸ”— [DEBUG] Using backend URL for update: ${backendUrl}`);
      
      const response = await fetch(`${backendUrl}/update-flag/${flagId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();
        
        if (result.status === 1) {
          showNotification('Flag updated successfully!', 'success');
          closeEditModal();
          location.reload(); // Refresh to show updated flag
        } else {
          showNotification(result.message || 'Error updating flag', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error updating flag', 'error');
      }
    });

    // Delete Flag
    async function deleteFlag(id) {
      if (!confirm('Are you sure you want to delete this flag?')) {
        return;
      }

      try {
        const backendUrl = getBackendUrl();
      console.log(`ðŸ”— [DEBUG] Using backend URL for delete: ${backendUrl}`);
      
      const response = await fetch(`${backendUrl}/delete-flag/${id}`, {
          method: 'DELETE'
        });

        const result = await response.json();
        
        if (result.status === 1) {
          showNotification('Flag deleted successfully!', 'success');
          location.reload(); // Refresh to remove deleted flag
        } else {
          showNotification(result.message || 'Error deleting flag', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error deleting flag', 'error');
      }
    }

    // Notification function
    function showNotification(message, type) {
      const notification = document.createElement('div');
      notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
        type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
      }`;
      notification.textContent = message;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.remove();
      }, 3000);
    }
  </script>
</body>
</html>

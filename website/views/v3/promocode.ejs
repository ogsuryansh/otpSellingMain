<%- include('partials/head') %>

<div class="min-h-screen bg-gray-50">
  <%- include('partials/navbar') %>
  
  <div class="container mx-auto px-4 py-8">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Promocode Management</h1>
      <p class="text-gray-600">Add and manage promocodes for your bot users</p>
    </div>

    <!-- Add Promocode Form -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-xl font-semibold text-gray-900">Add New Promocode</h2>
        <button id="toggleFormBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">
          Add Promocode
        </button>
      </div>

      <form id="addPromocodeForm" class="hidden space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <!-- Promocode -->
          <div>
            <label for="code" class="block text-sm font-medium text-gray-700 mb-2">
              Enter Promo Code *
            </label>
            <input 
              type="text" 
              id="code" 
              name="code" 
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="e.g., WELCOME50"
            >
          </div>

          <!-- Max Uses -->
          <div>
            <label for="max_uses" class="block text-sm font-medium text-gray-700 mb-2">
              Number of Users Can Use *
            </label>
            <input 
              type="number" 
              id="max_uses" 
              name="max_uses" 
              required
              min="1"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="e.g., 100"
            >
          </div>

          <!-- Amount -->
          <div>
            <label for="amount" class="block text-sm font-medium text-gray-700 mb-2">
              Amount to Add (â‚¹) *
            </label>
            <input 
              type="number" 
              id="amount" 
              name="amount" 
              required
              min="0.01"
              step="0.01"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="e.g., 50.00"
            >
          </div>
        </div>

        <div class="flex justify-end space-x-4">
          <button 
            type="button" 
            id="cancelBtn"
            class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
          >
            Cancel
          </button>
          <button 
            type="submit" 
            class="px-6 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors"
          >
            Add Promocode
          </button>
        </div>
      </form>
    </div>

    <!-- Promocodes List -->
    <div class="bg-white rounded-lg shadow-md">
      <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-900">My Promocodes</h2>
      </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Promocode
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Amount
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Uses
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Status
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Created
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Actions
              </th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200" id="promocodesTableBody">
            <% if (promocodes && promocodes.length > 0) { %>
              <% promocodes.forEach(promocode => { %>
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm font-medium text-gray-900">
                      <%= promocode.code %>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">
                      â‚¹<%= promocode.amount.toFixed(2) %>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">
                      <%= promocode.current_uses %> / <%= promocode.max_uses %>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <% if (promocode.is_active && promocode.current_uses < promocode.max_uses) { %>
                      <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                        Active
                      </span>
                    <% } else { %>
                      <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800">
                        Inactive
                      </span>
                    <% } %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <%= new Date(promocode.createdAt).toLocaleDateString() %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <button 
                      onclick="deletePromocode('<%= promocode._id %>')"
                      class="text-red-600 hover:text-red-900 transition-colors"
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="6" class="px-6 py-4 text-center text-gray-500">
                  No promocodes found. Add your first promocode above.
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<%- include('partials/script') %>

<script>
  // Toggle form visibility
  const toggleFormBtn = document.getElementById('toggleFormBtn');
  const addPromocodeForm = document.getElementById('addPromocodeForm');
  const cancelBtn = document.getElementById('cancelBtn');

  toggleFormBtn.addEventListener('click', () => {
    addPromocodeForm.classList.toggle('hidden');
    toggleFormBtn.textContent = addPromocodeForm.classList.contains('hidden') ? 'Add Promocode' : 'Hide Form';
  });

  cancelBtn.addEventListener('click', () => {
    addPromocodeForm.classList.add('hidden');
    toggleFormBtn.textContent = 'Add Promocode';
    addPromocodeForm.reset();
  });

  // Get backend URL - use environment variable or fallback to current origin
  function getBackendUrl() {
    // Check if we're on Vercel (production)
    if (window.location.hostname !== 'localhost' && window.location.hostname !== '127.0.0.1') {
      // Use the same domain for Vercel deployment
      return window.location.origin;
    } else {
      // Use localhost:3001 for local development
      return 'http://localhost:3001';
    }
  }

  // Handle form submission
  addPromocodeForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(addPromocodeForm);
    const data = {
      code: formData.get('code'),
      max_uses: formData.get('max_uses'),
      amount: formData.get('amount')
    };

    try {
      const backendUrl = getBackendUrl();
      console.log(`ðŸ”— [DEBUG] Using backend URL: ${backendUrl}`);
      
      const response = await fetch(`${backendUrl}/add-promocode`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (result.status === 1) {
        showAlert('success', result.message);
        addPromocodeForm.reset();
        addPromocodeForm.classList.add('hidden');
        toggleFormBtn.textContent = 'Add Promocode';
        // Reload page to show new promocode
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        showAlert('error', result.message);
      }
    } catch (error) {
      console.error('Error:', error);
      showAlert('error', 'An error occurred while adding the promocode.');
    }
  });

  // Delete promocode
  async function deletePromocode(id) {
    if (!confirm('Are you sure you want to delete this promocode?')) {
      return;
    }

    try {
      const backendUrl = getBackendUrl();
      console.log(`ðŸ”— [DEBUG] Using backend URL for delete: ${backendUrl}`);
      
      const response = await fetch(`${backendUrl}/delete-promocode/${id}`, {
        method: 'DELETE'
      });

      const result = await response.json();

      if (result.status === 1) {
        showAlert('success', result.message);
        // Reload page to update the list
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        showAlert('error', result.message);
      }
    } catch (error) {
      console.error('Error:', error);
      showAlert('error', 'An error occurred while deleting the promocode.');
    }
  }

  // Alert function
  function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg ${
      type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
    }`;
    alertDiv.textContent = message;
    
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
      alertDiv.remove();
    }, 3000);
  }
</script>
